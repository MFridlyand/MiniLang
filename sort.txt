function sort ( a )
{
	var sz = call array_size ( a )
	if sz < 2
	{
		return 0
	}
	var i = 0
	var j = 0
	var t = 0
	while i < sz
	{
		j = i + 1
		while j < sz
		{
			if a [ j ] < a [ i ]
			{
				t = a [ i ]
				a [ i ] = a [ j ]
				a [ j ] = t
			}
			j = j + 1
		}		
		i = i + 1
	}
}

function qsort ( a )
{
	var sz = call array_size ( a )
	if sz < 2
	{
		return a
	}
	var ls = call make_array ( 0 )
	var eq = call make_array ( 0 )
	var gt = call make_array ( 0 )
	var i = 0
	while i < sz
	{
		if a [ i ] < a [ 0 ]
		{
			call array_add ( ls , a [ i ] )
		} 
		else
		{
			if a [ i ] > a [ 0 ]
			{
				call array_add ( gt , a [ i ] ) 
			}
			else
			{
				call array_add ( eq , a [ i ] ) 
			}
		}
		i = i + 1
	}
	
	call qsort ( ls )
	var ls_sz = call array_size ( ls )

	i = 0
	var index = 0
	while i < ls_sz
	{
		a [ index ] = ls [ i ] 
		i = i + 1
		index = index + 1
	}

	var eq_sz = call array_size ( eq )
	i = 0
	while i < eq_sz
	{
		a [ index ] = eq [ i ] 
		i = i + 1
		index = index + 1
	}

	call qsort ( gt )
	var gt_sz = call array_size ( gt )
	i = 0
	while i < gt_sz
	{
		a [ index ] = gt [ i ] 
		i = i + 1
		index = index + 1
	}
	call array_free ( ls )
	call array_free ( eq )
	call array_free ( gt )
	return a
}

function printArray ( a )
{
	var sz = call array_size ( a )
	var i = 0
	while i < sz
	{
		print a [ i ]
		i = i + 1
	}
}

var data = call make_array ( 0 )
call array_add ( data , 10 )
call array_add ( data , 4 )
call array_add ( data , 5 )
call array_add ( data , -5 )
call array_add ( data , 1 )
call array_add ( data , 2 )
call array_add ( data , 3 )

call printArray ( data )
call qsort ( data )
print "sorted:"
call printArray ( data )